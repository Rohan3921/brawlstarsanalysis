[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Brawl Stars Analysis",
    "section": "",
    "text": "1 Introduction\nOur project revolves around the game Brawl Stars, a popular mobile game by Supercell. We plan to explore the data to uncover trends and insights into gameplay, perhaps better understanding player behavior and how they impact results and therefore should inform player strategies.\nWe chose this topic partially because of its highly structured data, and because of its popularity and the potential appeal to other players of a statistical or computational analysis of game mechanics.\nFor those unfamiliar with the game!\n\nPlayers select a “brawler” a unique character with certain abilities. Brawlers have a “power level” that can be upgraded by collecting power points and spending in-game coins and gems. This improves their strength, like health and damage.\nThey participate in various game modes, such as Brawl Ball, Gem Grab, and Heist. Each has a distinct objective.\nAll game modes are multiplayer, with 6-10 players per game. Some game modes are individual, and some are team-based. For team-based games, one player is recognized as the “star player” based on a somehow outstanding performance. This can be due to: high damage dealt, high contribution to the team goals/success (ie scoring a goal, dealing damage to the safe).\nWinning or losing a game affects trophy count, which is a sort of ranking of skill level or progression in the game.\n\nSome questions we’re interested in answering include:\n\nWhich brawlers are most frequently used by players, and how does this change across different game modes?\nHow do player win rates vary by game mode, and are there any modes where losses significantly outweigh wins?\nWhat are the typical lengths of matches, and are there clear patterns tied to specific game modes?\nAre there any gamemodes that are both fast, and more frequently provide wins, especially if a certain brawler is used by the individual player, or team?\nHow do win rates compare to pick rate for each brawler (do the more popular brawlers have higher win rates)?\n\nWhy this matters:\n\nPlayers can better strategize on how to progress in the game faster, if certain brawlers, or game modes are more favorable towards faster progress (shorter match times, higher win rate for certain brawlers, etc).\nUnderstanding player preferences and performance trends can offer valuable insights for developers seeking to balance the game and improve player satisfaction.\n\nThis introduction is the basis of our exploratory data analysis, which will delve deeper into the dataset to address our research questions.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>index.qmd</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  data.qmd",
    "section": "",
    "text": "2.1 Data",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>data.qmd</span>"
    ]
  },
  {
    "objectID": "data.html#data",
    "href": "data.html#data",
    "title": "2  data.qmd",
    "section": "",
    "text": "2.1.1 Technical Description\nThe dataset used for this project contains detailed logs of matches from the mobile game Brawl Stars, developed by Supercell. The data provides valuable insights into gameplay mechanics, player behavior, and match outcomes.\n\n\n2.1.2 Key Information:\n\nSource: The dataset was obtained from Kaggle, where it was shared in JSON format.\nFormat: Our preprocessed dataset is in CSV format, with 40+ columns capturing details about players, brawlers, match outcomes, and game modes.\nSize: 100,000+ rows, with each row reflecting a different match.\nPreprocessing:\n\nJSON data was restructured into CSV format.\nNull values and inconsistent entries were identified for cleanup.\n\n\n\n\n2.1.3 Challenges:\nWe are also pursuing gathering our own data via API, but gathering such a sizeable dataset is challenging since real player IDs must be individually specified, unless we access player IDs via the top rankings table, in which case, the data will be heavily skewed towards high skilled, high trophy game play which is different from how many/most players play.\nIn the current dataset, we are facing the following challenges:\n\nOutdated Data:\n\nThe dataset reflects an older version of Brawl Stars (updated July 2021). For instance:\n\nBrawler levels max out at 10 (current cap is 11).\nCertain battle modes, such as type, are ambiguous and undefined; the official “ranked” mode was released earlier this year (2024), however, the 2021 data cites ranked versus casual play in type.\n\n\nAmbiguities in Game Modes:\n\nSome modes, like type do not translate directly to known categories and may be excluded from mode-specific analysis.\n\n\n\n\n2.1.4 Summary of Columns:\nOur dataset has detailed logs of matches, including:\n\nPlayer & brawler information\n\nNames & IDs of players across all teams\nBrawler levels\nStar player details\n\nBattle information\n\nEvent IDs\nMap information\n\nMatch duration\nTrophy changes",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>data.qmd</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  data.qmd",
    "section": "2.2 Missing Value Analysis",
    "text": "2.2 Missing Value Analysis\n\n2.2.1 Missing Values by Column\n\n\nCode\n# load necessary libraries\n\nlibrary(ggplot2)\nsuppressPackageStartupMessages(library(dplyr))\nlibrary(tidyr)\n\ndata&lt;- read.csv(\"battles_data_full.csv\")\n# calculate missing values for each column\nmissing_values &lt;- data |&gt; \n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt; \n  pivot_longer(cols = everything(), names_to = 'column', values_to = 'missing_count')\n\n# visualize missing values with improved label handling\nggplot(missing_values, aes(x = reorder(column, missing_count), y = missing_count)) +\n  geom_bar(stat = 'identity', fill = 'steelblue', color = 'black', width = 0.7) +\n  coord_flip() +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.3))) + # add a small space above bars \n  labs(title = 'Missing Values by Column', x = 'Column Name', y = 'Count of Missing Values') +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = 'bold'), axis.text.y = element_text(size = 8, angle = 0, hjust = 1), axis.text.x = element_text(size = 10), axis.title = element_text(size = 12))\n\n\n\n\n\n\n\n\n\n\n\nCode\n# filter null power levels\nnull_power_levels &lt;- data |&gt; \n  filter(is.na(team_1_player_1_brawler_power)) |&gt; \n  count(battle_mode)\n\n# plot null power levels across battle modes\nggplot(null_power_levels, aes(x = reorder(battle_mode, -n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"orange\", color = \"black\", width = 0.7) +\n  labs(title = \"Frequency of Null Power Levels by Battle Mode\", x = \"Battle Mode\", y = \"Count of Null Power Levels\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"), axis.text.x = element_text(size = 10, angle = 45, hjust = 1), axis.title = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nNull and Missing Values:\n- Some rows have missing player names or brawler details.\n- ‘power_level’ usually should never be null, since all brawlers have a power level between 1 and 11 (10 in the data), however, there are many null power levels in the data.\n- In most game modes, there are three brawlers per team, and the data contains the ‘power_level’ for each brawler. However, soloShowdown and duoShowdown only have 1 and 2 brawlers per team respectively, so it is expected for those modes to have more null values.\n- Similarly, undefined values in ‘battle_mode’ and ‘battle_result’ raise questions about data quality.\n\n\n2.2.2 d3 Code Preparation\n\nCode that we used to create the dataset needed for the d3 visualization:\n\n\n\nCode\nrole_mapping &lt;- c(\n  # Damage Dealers\n  \"CARL\" = \"Damage Dealers\", \"CHESTER\" = \"Damage Dealers\", \"CHUCK\" = \"Damage Dealers\",\n  \"CLANCY\" = \"Damage Dealers\", \"COLETTE\" = \"Damage Dealers\", \"COLT\" = \"Damage Dealers\",\n  \"EVE\" = \"Damage Dealers\", \"LOLA\" = \"Damage Dealers\", \"MOE\" = \"Damage Dealers\",\n  \"NITA\" = \"Damage Dealers\", \"PEARL\" = \"Damage Dealers\", \"R-T\" = \"Damage Dealers\",\n  \"RICO\" = \"Damage Dealers\", \"SHELLY\" = \"Damage Dealers\", \"SPIKE\" = \"Damage Dealers\",\n  \"SURGE\" = \"Damage Dealers\", \"TARA\" = \"Damage Dealers\", \"8-BIT\" = \"Damage Dealers\",\n \n  # Tanks\n  \"DRACO\" = \"Tanks\", \"HANK\" = \"Tanks\", \"BUSTER\" = \"Tanks\", \"MEG\" = \"Tanks\",\n  \"ASH\" = \"Tanks\", \"JACKY\" = \"Tanks\", \"BIBI\" = \"Tanks\", \"ROSA\" = \"Tanks\",\n  \"FRANK\" = \"Tanks\", \"DARRYL\" = \"Tanks\", \"EL PRIMO\" = \"Tanks\", \"BULL\" = \"Tanks\",\n \n  # Marksmen\n  \"ANGELO\" = \"Marksmen\", \"MAISIE\" = \"Marksmen\", \"MANDY\" = \"Marksmen\", \"BONNIE\" = \"Marksmen\",\n  \"JANET\" = \"Marksmen\", \"BELLE\" = \"Marksmen\", \"NANI\" = \"Marksmen\", \"BEA\" = \"Marksmen\",\n  \"PIPER\" = \"Marksmen\", \"BROCK\" = \"Marksmen\",\n \n  # Artillery\n  \"JUJU\" = \"Artillery\", \"LARRY & LAWRIE\" = \"Artillery\", \"GROM\" = \"Artillery\", \"SPROUT\" = \"Artillery\",\n  \"TICK\" = \"Artillery\", \"PENNY\" = \"Artillery\", \"DYNAMIKE\" = \"Artillery\", \"BARLEY\" = \"Artillery\",\n \n  # Controllers\n  \"CHARLIE\" = \"Controllers\", \"WILLOW\" = \"Controllers\", \"OTIS\" = \"Controllers\", \"GRIFF\" = \"Controllers\",\n  \"SQUEAK\" = \"Controllers\", \"LOU\" = \"Controllers\", \"AMBER\" = \"Controllers\", \"GALE\" = \"Controllers\",\n  \"MR. P\" = \"Controllers\", \"EMZ\" = \"Controllers\", \"SANDY\" = \"Controllers\", \"GENE\" = \"Controllers\",\n  \"BO\" = \"Controllers\", \"JESSIE\" = \"Controllers\",\n \n  # Assassins\n  \"KENJI\" = \"Assassins\", \"LILY\" = \"Assassins\", \"MELODIE\" = \"Assassins\", \"MICO\" = \"Assassins\",\n  \"CORDIELUS\" = \"Assassins\", \"SAM\" = \"Assassins\", \"FANG\" = \"Assassins\", \"BUZZ\" = \"Assassins\",\n  \"STU\" = \"Assassins\", \"EDGAR\" = \"Assassins\", \"LEON\" = \"Assassins\", \"CROW\" = \"Assassins\",\n  \"MORTIS\" = \"Assassins\", \"SHADE\" = \"Assassins\",\n \n  # Supports\n  \"BERRY\" = \"Supports\", \"KIT\" = \"Supports\", \"DOUG\" = \"Supports\", \"GRAY\" = \"Supports\",\n  \"GUS\" = \"Supports\", \"RUFFS\" = \"Supports\", \"BYRON\" = \"Supports\", \"MAX\" = \"Supports\",\n  \"PAM\" = \"Supports\", \"POCO\" = \"Supports\"\n)\n# pick_win_rates &lt;- pick_win_rates |&gt;\n#   mutate(role = role_mapping[star_player_brawler_name])\n#  write.csv(pick_win_rates, \"pick_win_rates_rolls.csv\")\n# \n# mean_pick_rate &lt;- mean(pick_win_rates$pick_rate, na.rm = TRUE)\n# \n# mean_win_rate &lt;- mean(pick_win_rates$win_rate, na.rm = TRUE)\n# \n# print(paste(\"Mean Pick Rate:\", mean_pick_rate))\n# print(paste(\"Mean Win Rate:\", mean_win_rate))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>data.qmd</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Which brawlers are most frequently used by players, and how does this change across different game modes?\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(forcats)\n\n# read in and prep the data\ndata &lt;- read.csv(\"battles_data_full.csv\")\n\n# function to do the opposite of %in% (%!in%)\n'%!in%' &lt;- function(x, y) !('%in%'(x, y))\n\n# filter out unwanted battle modes & ensure all brawler name columns are non-empty\ndata &lt;- data |&gt; \n  filter(\n    battle_mode %!in% c(\"soloShowdown\", \"roboRumble\", \"loneStar\", \"duoShowdown\", \"bigGame\"),\n    star_player_brawler_name != ''\n  ) |&gt; \n  drop_na()\n\n# star player frequency by game mode\nbrawler_usage &lt;- data |&gt; \n  group_by(battle_mode, star_player_brawler_name) |&gt; \n  summarise(count = n(), .groups = 'drop') \n\n# select top 10 brawlers per mode\ntop_brawlers &lt;- brawler_usage |&gt; \n  group_by(battle_mode) |&gt; \n  slice_max(order_by = count, n = 10) |&gt; \n  ungroup()\n\n# determine the facet and bar orders\nfacet_order &lt;- top_brawlers |&gt; \n  group_by(battle_mode) |&gt; \n  summarise(total_count = sum(count), .groups = 'drop') |&gt; \n  arrange(-total_count) |&gt; \n  pull(battle_mode)\n\nbar_order &lt;- top_brawlers |&gt; \n  arrange(-count) |&gt; \n  pull(star_player_brawler_name) |&gt; \n  unique()\n\n# relevel the factors\ntop_brawlers &lt;- top_brawlers |&gt; \n  mutate(\n    battle_mode = factor(battle_mode, levels = facet_order),\n    star_player_brawler_name = factor(star_player_brawler_name, levels = bar_order)\n  )\n\nggplot(top_brawlers, aes(x = star_player_brawler_name, y = count, fill = battle_mode)) +\n  geom_bar(stat = 'identity') +\n  coord_flip() +\n  facet_wrap(~battle_mode, scales = 'free_y') +\n  labs(title = 'Most Common Star Player Brawlers for Each Game Mode', \n       x = 'Brawler', \n       y = 'Frequency') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  theme(axis.text.y = element_text(size = 6))\nFrom this plot, we can see how different brawlers can be heavily favored in some game modes compared to others. First, we see how modes like brawlBall, heist and knockout all have favored brawlers while the rest seem relatively evenly distributed. Knockout is a mode where kills are important, so nani–a marksmen–would be a good pick. Brawl ball is a soccer based mode, so mortis being a character with excellent mobility makes him a great pick.\nNote: the ordering is not consistent across facets because each mode will have a different set of top 10 brawlers.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#how-do-player-win-rates-vary-by-game-mode",
    "href": "results.html#how-do-player-win-rates-vary-by-game-mode",
    "title": "3  Results",
    "section": "3.2 How do player win rates vary by game mode?",
    "text": "3.2 How do player win rates vary by game mode?\n\n\nCode\n# win rates by game mode\nwin_rates &lt;- data |&gt; \n  group_by(battle_mode) |&gt; \n  summarise(win_rate = mean(battle_result == \"victory\"), .groups = 'drop')\n\n# visualize win rates as a diverging chart\nggplot(win_rates, aes(x = reorder(battle_mode, win_rate), y = win_rate - 0.5, fill = win_rate)) +\n  geom_bar(stat = 'identity') +\n  scale_fill_gradient2(low = \"red\", mid = \"gray\", high = \"forestgreen\", midpoint = 0.5) +\n  coord_flip() +\n  labs(\n    title = 'Player Win Rates by Game Mode',\n    x = 'Game Mode',\n    y = 'Win Rate'\n  ) +\n  scale_y_continuous(\n    labels = function(y) paste0(50 + y * 100, \"%\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nInterestingly enough, the win rate for every game mode is above 50%. We took this to mean that our data is sampled from above average players of the game. From just this graph, it is difficult to tell if game modes like siege are easier to win compared to modes like knockout, if our sampled players are better at specific modes, or some other unspecified reason.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#what-are-the-typical-lengths-of-matches-and-are-there-patterns-tied-to-specific-game-modes",
    "href": "results.html#what-are-the-typical-lengths-of-matches-and-are-there-patterns-tied-to-specific-game-modes",
    "title": "3  Results",
    "section": "3.3 What are the typical lengths of matches, and are there patterns tied to specific game modes?",
    "text": "3.3 What are the typical lengths of matches, and are there patterns tied to specific game modes?\n\n\nCode\nlibrary(viridis)\n\n\nLoading required package: viridisLite\n\n\nCode\nlibrary(viridisLite);\n\nggplot(data, aes(x = reorder(battle_mode, battle_duration), y = battle_duration, fill = battle_mode)) +\n  geom_boxplot() +\n  scale_fill_viridis(discrete = TRUE) +\n  coord_flip() +\n  labs(title = 'Match Durations by Game Mode', x = 'Game Mode', y = 'Duration (seconds)') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nAll game modes have a specified time limit before they end automatically. Most modes also have a designated win condition that will terminate the game early. From this plot, we can see that brawl ball and knockout games seem to have the most variation in lengths, with hotzone and gem grab have smaller variations. We believe the time associated with bounty may be incorrect, as it is not logical for every bounty game to take exactly 2 minutes. It is interesting that gemGrab and hotZone have so many outliers on the longer end of the duration, since their time limits aren’t as strict as any of the other modes.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#are-there-game-modes-that-are-both-fast-and-frequently-provide-wins",
    "href": "results.html#are-there-game-modes-that-are-both-fast-and-frequently-provide-wins",
    "title": "3  Results",
    "section": "3.4 Are there game modes that are both fast and frequently provide wins?",
    "text": "3.4 Are there game modes that are both fast and frequently provide wins?\n\n\nCode\n# calculate average match duration\nmatch_duration &lt;- data |&gt; \n  group_by(battle_mode) |&gt; \n  summarise(avg_duration = mean(battle_duration, na.rm = TRUE), .groups = 'drop')\n\n# combine win rates and match durations\ncombined_metrics &lt;- win_rates |&gt; \n  inner_join(match_duration, by = \"battle_mode\")\n\n# visualize combined metrics\nggplot(combined_metrics, aes(x = avg_duration, y = win_rate, label = battle_mode)) +\n  geom_point(size = 4, color = 'royalblue') +\n  geom_text(vjust = -1, size = 3) +\n  labs(title = 'Win Rate vs. Average Match Duration', x = 'Average Match Duration (seconds)', y = 'Win Rate', subtitle = 'Modes with higher win rates and shorter durations are better for quick trophies') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nFrom this plot, a player would be able to determine which modes take the shortest amount of time and are the most likely to lead to wins. From this graph, it seems that hotzone would be the clear winner, but heist could also be a candidate. Knockout seems to be the worst pick, with the lowest win rate and a seemingly above average match duration.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#distribution-of-trophy-changes-by-game-mode",
    "href": "results.html#distribution-of-trophy-changes-by-game-mode",
    "title": "3  Results",
    "section": "3.5 Distribution of Trophy Changes by Game Mode",
    "text": "3.5 Distribution of Trophy Changes by Game Mode\n\n\nCode\nggplot(data, aes(x = trophy_change, fill = battle_mode)) +\n  geom_histogram(binwidth = 5, color = 'black', alpha = 0.7) +\n  facet_wrap(~battle_mode, scales = 'free_y') +\n  labs(\n    title = 'Distribution of Trophy Changes by Game Mode',\n    x = 'Trophy Change',\n    y = 'Frequency'\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nFrom these graphs, we can see that many of the trophy changes seem to be slightly left-skewed (a concentration of points on the right). As we discussed previously, this is likely because our sample of data is from higher skill players. Bounty, siege, and heist seem to be the most left-skewed. Gem grad and knockout seem to be more evenly balanced, giving almost a quadratic shape. It is much harder to tie in these two game modes, so it make sense for the points to be concentration on either side of the zero.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#which-maps-are-most-played-for-each-game-mode",
    "href": "results.html#which-maps-are-most-played-for-each-game-mode",
    "title": "3  Results",
    "section": "3.6 Which maps are most played for each game mode?",
    "text": "3.6 Which maps are most played for each game mode?\n\n\nCode\n# calculate map usage frequencies\nmap_usage &lt;- data |&gt; \n  group_by(map) |&gt; \n  filter(map != '') |&gt;\n  drop_na() |&gt;\n  summarise(count = n(), .groups = 'drop') |&gt; \n  arrange(desc(count)) |&gt; \n  slice_head(n = 9) # grab top 9\n\n# filter data for only the top 9 maps\ntop_map_data &lt;- data |&gt; \n  filter(map %in% map_usage$map)\n\n# group by map and brawler, limit to top 5 brawlers per map\nbrawler_usage &lt;- top_map_data |&gt; \n  group_by(map, star_player_brawler_name) |&gt; \n  summarise(count = n(), .groups = 'drop') |&gt; \n  arrange(map, desc(count)) |&gt; \n  group_by(map) |&gt; \n  slice_max(order_by = count, n = 5)\n\n# plot the data\nggplot(brawler_usage, aes(x = reorder(star_player_brawler_name, count), y = count, fill = map)) +\n  geom_bar(stat = 'identity') +\n  coord_flip() +\n  facet_wrap(~map, scales = 'free_y') +\n  theme_minimal() +\n  #scale_fill_brewer(palette = 'Set3') + \n  labs(\n    title = 'Top 5 Brawlers for Top 9 Maps',\n    x = 'Brawler',\n    y = 'Count'\n  ) +\n  theme(\n    axis.text.y = element_text(size = 10),\n    strip.text = element_text(size = 12),\n    plot.margin = margin(10, 10, 10, 50)\n  )\n\n\n\n\n\n\n\n\n\nFrom this data, we can see how different brawlers are favored across the 9 most popular maps. For most of them, a brawler is not heavily favored. For some of the maps, the most favored brawler also correlates with the common game mode (bank shot and mortis are brawl ball while kaboom canyon and colette are heist).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#which-maps-have-the-best-win-rates",
    "href": "results.html#which-maps-have-the-best-win-rates",
    "title": "3  Results",
    "section": "3.7 Which maps have the best win rates?",
    "text": "3.7 Which maps have the best win rates?\n\n\nCode\n# calculate win rates for each map\nmap_win_rate &lt;- data |&gt; \n  filter(map != '') |&gt;\n  drop_na() |&gt;\n  group_by(map) |&gt; \n  summarise(win_rate = mean(battle_result == \"victory\"), .groups = 'drop')\n\n# visualize win rate deviation\nggplot(map_win_rate, aes(x = reorder(map, win_rate), y = win_rate - 0.5, fill = win_rate)) +\n  geom_bar(stat = 'identity') +\n  coord_flip() +\n  scale_fill_gradient2(low = \"blue\", mid = \"gray\", high = \"red\", midpoint = 0.5) +\n  \n  scale_y_continuous(labels = function(x) scales::percent(x + 0.5),\n                     breaks = seq(-0.5, 0.5, 0.1)) +\n  labs(title = 'Win Rate Deviation by Map', x = 'Map', y = 'Deviation from 50% Win Rate') +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 7),\n        axis.text.x = element_text(size = 10)) \n\n\n\n\n\n\n\n\n\nWe can see that maps differ vastly in win rates within this dataset. Maps like Split Difference and Goldarm Gulch are exactly 100%, whereas Ends Meet and Olive Branch are exactly 0%. This indicates that these maps may cater excessively to specific strategies or team compositions. The balanced maps such as Hot Potato and Crimewater are right around 50%, suggesting that some maps can truly be an even playing field. This demonstrates how significantly map design can effect win rates and point to opportunities to optimize or balance maps with higher deviations. The sampled players may also have been particularly favored on specific battle maps, or certain maps may have been less played overall leading to skewed overall win rates.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#how-do-the-average-brawler-levels-vary-across-game-modes",
    "href": "results.html#how-do-the-average-brawler-levels-vary-across-game-modes",
    "title": "3  Results",
    "section": "3.8 How do the average brawler levels vary across game modes?",
    "text": "3.8 How do the average brawler levels vary across game modes?\n\n\nCode\npower_levels &lt;- data |&gt; \n  select(battle_mode, contains(\"_brawler_power\")) |&gt; \n  pivot_longer(cols = starts_with(\"team\"), names_to = \"player\", values_to = \"power_level\") |&gt; \n  group_by(battle_mode) |&gt; \n  summarise(avg_power_level = mean(power_level, na.rm = TRUE), .groups = 'drop')\n\nggplot(power_levels, aes(x = reorder(battle_mode, avg_power_level), y = avg_power_level)) +\n  geom_bar(stat = 'identity') +\n  coord_flip() +\n  labs(title = 'Average Brawler Power Level by Game Mode', x = 'Game Mode', y = 'Average Power Level') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nIn general, it seems that the average power level for brawlers is nearly 10 across all game modes. Brawl ball is slightly lower and knockout seems to be noticeably lower. Knockout is a very skill based mode, where it is a direct 3v3, and if a player dies, they are out until a team is eliminated. This does not seem to give any insight into why it would have a lower average power level. One theory would be that people push trophies on their lower level brawlers in knockout since it’s a higher skill mode.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#what-times-of-day-is-the-game-played-the-most-globally-utc",
    "href": "results.html#what-times-of-day-is-the-game-played-the-most-globally-utc",
    "title": "3  Results",
    "section": "3.9 What times of day is the game played the most globally (UTC)?",
    "text": "3.9 What times of day is the game played the most globally (UTC)?\n\n\nCode\n# extract the hour from battle_time\ndata &lt;- data |&gt; \n  mutate(hour = as.integer(substr(battle_time, 10, 11)))\n\n# count matches by hour\nmatches_by_hour &lt;- data |&gt; \n  group_by(hour) |&gt; \n  summarise(match_count = n(), .groups = 'drop')\n\n# plot match frequency by hour\nggplot(matches_by_hour, aes(x = hour, y = match_count)) +\n  geom_line(color = 'blue', size = 1) +\n  geom_point(color = 'red', size = 2) +\n  labs(title = 'Most Frequent Times of Day to Play the Game Globally', x = 'Hour of the Day (UTC)', y = 'Number of Matches') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nFrom this graph, we can see that the majority of matches appear to be played between 12 UTC and 16 UTC. We believe the data was sampled from ranked leaderboard players, so this likely correlates with the timezone the ranked players are from. We were intrigued that there is only one spike in the data, which would imply that one timezone contributes to the majority of the matches. It is possible this correlates with the end of the work day.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#how-do-matches-differ-by-hour-of-the-day",
    "href": "results.html#how-do-matches-differ-by-hour-of-the-day",
    "title": "3  Results",
    "section": "3.10 How do matches differ by hour of the day?",
    "text": "3.10 How do matches differ by hour of the day?\n\n\nCode\n# extract hour\ndata &lt;- data |&gt; \n  mutate(hour_24 = as.integer(substr(battle_time, 10, 11)), \n         hour_12 = ifelse(hour_24 == 0, 12, hour_24 %% 12),  # convert to 12h format\n         period = ifelse(hour_24 &lt; 12, 'AM', 'PM'),          # add am/pm\n         hour_am_pm = paste(hour_12, period))                # fix labels\n\n# remove rows with missing or malformed battle_time values\ndata &lt;- data |&gt; filter(!is.na(hour_am_pm) & !is.na(battle_duration))\ndata &lt;- data |&gt; \n  mutate(hour_am_pm = factor(hour_am_pm, \n                             levels = c('12 AM', paste(1:11, 'AM'), '12 PM', paste(1:11, 'PM'))))\n\ndata &lt;- data |&gt; \n  filter(!is.na(hour_am_pm) & \n         !is.na(battle_duration) & \n         !is.na(battle_mode))\n\n# average match duration by hour and battle mode\nmatch_duration_heatmap &lt;- data |&gt; \n  group_by(hour_am_pm, battle_mode) |&gt; \n  summarise(avg_duration = mean(battle_duration, na.rm = TRUE), .groups = 'drop')\n\n# fill up the complete grid of all hours and modes\ncomplete_grid &lt;- expand.grid(\n  hour_am_pm = factor(c('12 AM', paste(1:11, 'AM'), '12 PM', paste(1:11, 'PM')), \n                      levels = c('12 AM', paste(1:11, 'AM'), '12 PM', paste(1:11, 'PM'))),\n  battle_mode = unique(data$battle_mode)\n)\n\n# merge the complete grid with the actual data\nmatch_duration_heatmap &lt;- complete_grid |&gt; \n  left_join(match_duration_heatmap, by = c('hour_am_pm', 'battle_mode'))\n\n# plot the heatmap\nggplot(match_duration_heatmap, aes(x = hour_am_pm, y = battle_mode, fill = avg_duration)) +\n  geom_tile(color = \"white\") +                                  # change gridlines\n  scale_fill_viridis_c(option = \"plasma\", na.value = \"gray\") +  # set NAs to gray\n  labs(title = 'Heatmap of Match Durations by Hour of the Day',\n       x = 'Hour of the Day',\n       y = 'Game Mode',\n       fill = 'Avg Duration (seconds)') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nUnfortunately, we have no data from 12pm after removing gamemode and battle duration nulls. Bounty is consistent across every hour of the day, which cross references our boxplot graphs. Hotzone in general seems to have shorter durations, which correlates with our average win duration graph. It seems that between 2pm and 5pm would be the best time to play short matches with longer win rates. While most game modes stay relatively consistent, knockout’s time seems to change drastically depending on the time of day. From 7 am to 8 am there is an extreme jump in length. Then again from 4pm to 6pm, there’s a more gradual but still noticeable decline in time. This seems counter intuitive because 8am to 4pm is common work hours, where it would likely make sense to have shorter duration matches.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "4.1 Interactive Graph Notes",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "d3graph.html#interactive-graph-notes",
    "href": "d3graph.html#interactive-graph-notes",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Our interactive graph displays all the brawlers in our dataset, colorcoded by their specific “class” from the game. We calculated their pick rates (how often a brawler is used) and their win rates and plotted them against each other. From there, we created 4 categories:\nOverrated: high pick rate and low win rate\nEasy to play: high pick rate and high win rate\nUnpopular: low pick rate and low win rate\nHigh Skill: low pick rate and high win rate",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "In summary, we were able to determine that\n-certain brawlers are more prevalent in certain modes\n-there are specific times and game modes to gain trophies faster and easier\n-unclear whether some game modes are easier than others\n-popular brawlers do not always have the highest win rates\n\nOverall, this dataset shows that all players trend upwards in trophies. We determined that specific combinations of times, brawlers, maps and game modes were favorable for gaining trophies, at least for high skill players. While this data set seems to be comprised of higher skill players, the game seems to be generally fair from our analysis.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  }
]