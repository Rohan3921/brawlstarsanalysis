[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Brawl Stars Analysis",
    "section": "",
    "text": "1 Introduction\nOur project revolves around the game Brawl Stars, a popular mobile game by Supercell. We plan to explore the data to uncover trends and insights into gameplay, perhaps better understanding player behavior and how they impact results and therefore should inform player strategies.\nWe chose this topic partially because of its highly structured data, and because of its popularity and the potential appeal to other players of a statistical or computational analysis of game mechanics.\nFor those unfamiliar with the game!\n\nPlayers select a “brawler” a unique character with certain abilities. Brawlers have a “power level” that can be upgraded by collecting power points and spending in-game coins and gems. This improves their strength, like health and damage.\nThey participate in various game modes, such as Brawl Ball, Gem Grab, and Heist. Each has a distinct objective.\nAll game modes are multiplayer, with 6-10 players per game. Some game modes are individual, and some are team-based. For team-based games, one player is recognized as the “star player” based on a somehow outstanding performance. This can be due to: high damage dealt, high contribution to the team goals/success (ie scoring a goal, dealing damage to the safe).\nWinning or losing a game affects trophy count, which is a sort of ranking of skill level or progression in the game.\n\nSome questions we’re interested in answering include:\n\nWhich brawlers are most frequently used by players, and how does this change across different game modes?\nHow do player win rates vary by game mode, and are there any modes where losses significantly outweigh wins?\nWhat are the typical lengths of matches, and are there clear patterns tied to specific game modes?\nAre there any gamemodes that are both fast, and more frequently provide wins, especially if a certain brawler is used by the individual player, or team?\n\nWhy this matters:\n\nPlayers can better strategize on how to progress in the game faster, if certain brawlers, or game modes are more favorable towards faster progress (shorter match times, higher win rate for certain brawlers, etc).\nUnderstanding player preferences and performance trends can offer valuable insights for developers seeking to balance the game and improve player satisfaction.\n\nThis introduction is the basis of our exploratory data analysis, which will delve deeper into the dataset to address our research questions.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>index.qmd</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  data.qmd",
    "section": "",
    "text": "3 Data",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>data.qmd</span>"
    ]
  },
  {
    "objectID": "data.html#technical-description",
    "href": "data.html#technical-description",
    "title": "2  data.qmd",
    "section": "3.1 2.1 Technical Description",
    "text": "3.1 2.1 Technical Description\nThe dataset used for this project contains detailed logs of matches from the mobile game Brawl Stars, developed by Supercell. The data provides valuable insights into gameplay mechanics, player behavior, and match outcomes.\n\n3.1.1 Key Information:\n\nSource: The dataset was obtained from Kaggle, where it was shared in JSON format.\nFormat: Our preprocessed dataset is in CSV format, with 40+ columns capturing details about players, brawlers, match outcomes, and game modes.\nSize: 100,000+ rows, with each row reflecting a different match.\nPreprocessing:\n\nJSON data was restructured into CSV format.\nNull values and inconsistent entries were identified for cleanup.\n\n\n\n\n3.1.2 Challenges:\nWe are also pursuing gathering our own data via API, but gathering such a sizeable dataset is challenging since real player IDs must be individually specified, unless we access player IDs via the top rankings table, in which case, the data will be heavily skewed towards high skilled, high trophy game play which is different from how many/most players play.\nIn the current dataset, we are facing the following challenges:\n\nOutdated Data:\n\nThe dataset reflects an older version of Brawl Stars (updated July 2021). For instance:\n\nBrawler levels max out at 10 (current cap is 11).\nCertain battle modes, such as type, are ambiguous and undefined; the official “ranked” mode was released earlier this year (2024), however, the 2021 data cites ranked versus casual play in type.\n\n\nAmbiguities in Game Modes:\n\nSome modes, like type do not translate directly to known categories and may be excluded from mode-specific analysis.\n\n\n\n\n3.1.3 Summary of Columns:\nOur dataset has detailed logs of matches, including:\n\nPlayer & brawler information\n\nNames & IDs of players across all teams\nBrawler levels\nStar player details\n\nBattle information\n\nEvent IDs\nMap information\n\nMatch duration\nTrophy changes",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>data.qmd</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  data.qmd",
    "section": "3.2 2.2 Missing Value Analysis",
    "text": "3.2 2.2 Missing Value Analysis\n\n3.2.1 Missing Values by Column\n\n\nCode\n# load necessary libraries\n\nlibrary(ggplot2)\nsuppressPackageStartupMessages(library(dplyr))\nlibrary(tidyr)\n\ndata&lt;- read.csv(\"battles_data_full.csv\")\n# calculate missing values for each column\nmissing_values &lt;- data |&gt; \n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt; \n  pivot_longer(cols = everything(), names_to = 'column', values_to = 'missing_count')\n\n# visualize missing values with improved label handling\nggplot(missing_values, aes(x = reorder(column, missing_count), y = missing_count)) +\n  geom_bar(stat = 'identity', fill = 'steelblue', color = 'black', width = 0.7) +\n  coord_flip() +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.3))) + # add a small space above bars \n  labs(title = 'Missing Values by Column', x = 'Column Name', y = 'Count of Missing Values') +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = 'bold'), axis.text.y = element_text(size = 8, angle = 0, hjust = 1), axis.text.x = element_text(size = 10), axis.title = element_text(size = 12))\n\n\n\n\n\n\n\n\n\n\n\nCode\n# filter null power levels\nnull_power_levels &lt;- data |&gt; \n  filter(is.na(team_1_player_1_brawler_power)) |&gt; \n  count(battle_mode)\n\n# plot null power levels across battle modes\nggplot(null_power_levels, aes(x = reorder(battle_mode, -n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"orange\", color = \"black\", width = 0.7) +\n  labs(title = \"Frequency of Null Power Levels by Battle Mode\", x = \"Battle Mode\", y = \"Count of Null Power Levels\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"), axis.text.x = element_text(size = 10, angle = 45, hjust = 1), axis.title = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nNull and Missing Values:\n- Some rows have missing player names or brawler details.\n- ‘power_level’ usually should never be null, since all brawlers have a power level between 1 and 11 (10 in the data), however, there are many null power levels in the data.\n- In most game modes, there are three brawlers per team, and the data contains the ‘power_level’ for each brawler. However, soloShowdown and duoShowdown only have 1 and 2 brawlers per team respectively, so it is expected for those modes to have more null values.\n- Similarly, undefined values in ‘battle_mode’ and ‘battle_result’ raise questions about data quality.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>data.qmd</span>"
    ]
  }
]